{"version":3,"file":"static/js/925.39d3c2d1.chunk.js","mappings":"0NAyBA,EAvBqB,SAAAA,GAAU,IAAD,EACtBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,kCACGF,EAAMG,cADT,aACG,EAAcC,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACxB,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaF,GACfG,MAAO,CAAEC,KAAMR,GAFjB,SAIGK,KALID,EASZ,OAIR,E,6CCrBKK,EAAY,mCAAG,WAAMC,GAAN,gFACbC,EADa,0DAC4CD,EAD5C,8EAIME,EAAAA,EAAAA,IAAUD,GAJhB,WAIXE,EAJW,QAMHC,KAAKC,QANF,sBAOT,IAAIC,MAPK,gCAUVH,EAASC,KAAKC,SAVJ,kCAYjBE,QAAQC,IAAI,KAAMC,SAZD,0DAAH,sDAelB,ICyCA,EAjDe,WAAO,IAAD,MACnB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOP,EAAP,KAAiBQ,EAAjB,KACA,GAA0BD,EAAAA,EAAAA,YAA1B,eAAOV,EAAP,KAAcY,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMzB,GAAWC,EAAAA,EAAAA,MACXyB,GAAcC,EAAAA,EAAAA,QAAM,oBAAC3B,EAASO,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAwBnD,OATAoB,EAAAA,EAAAA,YAAU,WACHlB,GAGLD,EAAaC,GACVmB,MAAK,SAAAhB,GAAQ,OAAIQ,EAAYR,EAAhB,IACbiB,OACJ,GAAE,CAACpB,KAGF,iCACE,SAAC,KAAD,CAAMJ,GAAIoB,EAAYK,QAAtB,mBAEA,kBAAMC,SA1BW,SAAAC,GACnBA,EAAIC,iBACJ,IACMC,EADOF,EAAIG,cACQC,SAAS3B,MAAM4B,MAGxC,GAFArB,QAAQC,IAAI,mBAAoBiB,IAE3BA,EACH,OAAOI,MAAM,wBAEfjB,EAASa,GACTV,EAAgB,CAAEf,MAAOyB,GAC1B,EAeG,WACE,kBACEK,SAAU,SAAAP,GAAG,OACXR,EAAgB,CAAEf,MAAOuB,EAAIQ,OAAOH,OADzB,EAGbI,KAAK,OACLC,KAAK,QACLL,MAAK,UAAEd,EAAaoB,IAAI,gBAAnB,QAA+B,MAEtC,mBAAQF,KAAK,SAAb,wBAEF,SAAC,EAAD,CAAOxC,OAAQW,MAGpB,C","sources":["components/Query.js","services/fetch-by-query.js","pages/Movies.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const Query = props => {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul>\n        {props.movies?.map(({ id, title }) => {\n          return (\n            <li key={id}>\n              <Link\n                to={`/movies/${id}`}\n                state={{ from: location }}\n              >\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Query;\n","import axios from 'axios';\n\nconst fetchByQuery = async query => {\n  const url = `https://api.themoviedb.org/3/search/movie?query=${query}&language=en-US&api_key=8cf662758bc2884725173cf48e8fe898`;\n\n  try {\n    const response = await axios.get(url);\n\n    if (!response.data.results) {\n      throw new Error();\n    }\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport default fetchByQuery;\n","import Query from 'components/Query';\nimport { useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  useLocation,\n  useSearchParams,\n} from 'react-router-dom';\nimport fetchByQuery from 'services/fetch-by-query';\n\nconst Movies = () => {\n  const [response, setResponse] = useState([]);\n  const [query, setQuery] = useState();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const queryResult = form.elements.query.value;\n    console.log('queryResult is: ', queryResult);\n\n    if (!queryResult) {\n      return alert('please enter a query');\n    }\n    setQuery(queryResult);\n    setSearchParams({ query: queryResult });\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    fetchByQuery(query)\n      .then(response => setResponse(response))\n      .catch();\n  }, [query]);\n\n  return (\n    <>\n      <Link to={backLinkRef.current}>Back</Link>\n\n      <form onSubmit={handleSubmit}>\n        <input\n          onChange={evt =>\n            setSearchParams({ query: evt.target.value })\n          }\n          type=\"text\"\n          name=\"query\"\n          value={searchParams.get('query') ?? ''}\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      <Query movies={response} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["props","location","useLocation","movies","map","id","title","to","state","from","fetchByQuery","query","url","axios","response","data","results","Error","console","log","message","useState","setResponse","setQuery","useSearchParams","searchParams","setSearchParams","backLinkRef","useRef","useEffect","then","catch","current","onSubmit","evt","preventDefault","queryResult","currentTarget","elements","value","alert","onChange","target","type","name","get"],"sourceRoot":""}