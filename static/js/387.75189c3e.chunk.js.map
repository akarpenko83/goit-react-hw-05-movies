{"version":3,"file":"static/js/387.75189c3e.chunk.js","mappings":"8PAEMA,EAAiB,mCAAG,WAAMC,GAAN,gFAClBC,EADkB,6CAC0BD,EAD1B,8EAICE,EAAAA,EAAAA,IAAUD,GAJX,WAIhBE,EAJgB,QAMRC,KANQ,sBAOd,IAAIC,MAPU,gCAUfF,EAASC,MAVM,kCAYtBE,QAAQC,IAAI,KAAMC,SAZI,0DAAH,sDAevB,ICZA,EALsB,SAAAC,GACpB,IAAMC,EAAS,GAEf,OADAD,EAAME,KAAI,SAAAC,GAAK,OAAIF,EAAOG,KAAKD,EAAME,KAAtB,IACRJ,EAAOK,KAAK,KACpB,E,kBCuDD,EA/CqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,YAAhC,eAAOf,EAAP,KAAiBgB,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAQnD,OANAC,EAAAA,EAAAA,YAAU,WACR3B,EAAkBiB,GACfW,MAAK,SAAAxB,GAAQ,OAAIgB,EAAYhB,EAAhB,IACbyB,OACJ,GAAE,CAACZ,IAEAb,GAEA,iCACE,SAAC,IAAD,CAAS0B,GAAIP,EAAYQ,QAAzB,qBAAoD,KACpD,gBACEC,MAAO,IACPC,IAAG,6CAAwC7B,EAAS8B,aACpDC,IAAK/B,EAASgC,WAEhB,wBAAKhC,EAASiC,SACd,wCAAwC,GAAxBjC,EAASkC,aAAzB,QACA,sCACA,uBAAIlC,EAASmC,YACb,oCACA,uBAAIC,EAAcpC,EAASO,WAC3B,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMmB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAW,SAAD,CACEC,UAAU,oDADZ,UAGE,SAAC,KAAD,UAKD,6CACR,C,sFCtDYC,GAAUC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,kR","sources":["services/fetch-movie-details.js","services/getGenresList.js","pages/MovieDetails.js","pages/MovieDetails.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst fetchMovieDetails = async id => {\n  const url = `https://api.themoviedb.org/3/movie/${id}?language=en-US&api_key=8cf662758bc2884725173cf48e8fe898`;\n\n  try {\n    const response = await axios.get(url);\n\n    if (!response.data) {\n      throw new Error();\n    }\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport default fetchMovieDetails;\n","const getGenresList = array => {\n  const genres = [];\n  array.map(genre => genres.push(genre.name));\n  return genres.join(', ');\n};\nexport default getGenresList;\n","import { Suspense } from 'react';\nimport { useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport fetchMovieDetails from 'services/fetch-movie-details';\nimport getGenresList from 'services/getGenresList';\nimport { BackBtn } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [response, setResponse] = useState();\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n      .then(response => setResponse(response))\n      .catch();\n  }, [movieId]);\n\n  if (response) {\n    return (\n      <>\n        <BackBtn to={backLinkRef.current}>Go Back</BackBtn>{' '}\n        <img\n          width={250}\n          src={`https://image.tmdb.org/t/p/original${response.poster_path}`}\n          alt={response.tagline}\n        ></img>\n        <h2>{response.title}</h2>\n        <p>User Score: {response.vote_average * 10}%</p>\n        <h3>Overview</h3>\n        <p>{response.overview}</p>\n        <h4>Genres</h4>\n        <p>{getGenresList(response.genres)}</p>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Suspense\n          fallback={<div>Loading... Please wait</div>}\n        >\n          <Outlet />\n        </Suspense>\n      </>\n    );\n  }\n  return <div>no details found</div>;\n};\n\nexport default MovieDetails;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const BackBtn = styled(Link)`\n  display: block;\n  color: white;\n  background-color: darkcyan;\n  text-decoration: none;\n  width: 100px;\n  border-radius: 4px;\n  text-align: center;\n  padding: 0.5rem;\n  margin-bottom: 1rem;\n  text-transform: uppercase;\n  font-weight: 500;\n`;\n"],"names":["fetchMovieDetails","id","url","axios","response","data","Error","console","log","message","array","genres","map","genre","push","name","join","movieId","useParams","useState","setResponse","location","useLocation","backLinkRef","useRef","state","from","useEffect","then","catch","to","current","width","src","poster_path","alt","tagline","title","vote_average","overview","getGenresList","Suspense","fallback","BackBtn","styled","Link"],"sourceRoot":""}